#using PyPlot
using Plots
using ColorSchemes
using SpecialFunctions
using Measures

solar = ColorSchemes.solar

# Parameter
D=0.864 # [cm^2 d^-1]
Q=1.0   # [fmol d^-1]
HT=0.8#0.01 # Half-saturation constant [fmol cm^-2]
λ=0.2  # [d^-1]

dt=0.2
a=0.2   # max. grazing rate
G=-exp(-a*dt)+1 # maximum grazing loss probability
G=0.039#0.08


n = 2001
r = range(0, 20, length=n)
T = zeros(n)
g = zeros(n)

@. T = Q/(D*2*pi)*besselk(0,(λ/D)^0.5*(r+0.1))  # r+0.001 instead of only r --> because if r=0 --> z would go to infinity
@. g = G*(1.0-T/(HT+T))

x=vcat(.-r[end:-1:2],r)
T=vcat(T[end:-1:2],T)
g=vcat(g[end:-1:2],g)

T_fct=0:0.001:1
g_fct=G.*(1.0 .- T_fct./(HT.+T_fct))
p=plot(T_fct,g_fct, lc=:black,legend=false,reuse=false,xlabel="Toxin conc. T",ylabel="Graz. loss prob. g")
plot!(margin=5mm)
display(p)
# savefig("D:\\Forschung\\Denmark Ocean Life\\Toxicity Project\\Figures\\Tox_Grazer\\ToxinGrazProb_Relship")

p1=plot(x,T,ylim=(0,2),lc=:black,legend=false,reuse=false,xlabel="x [cm]",ylabel="Toxin conc. T")
p2=plot(x,g,ylim=(0,G),lc=:black,legend=false,reuse=false,xlabel="x [cm]",ylabel="Graz. loss prob. g")
# plot!(x,fill(G/2,length(x)))

pall=plot(p1,p2)
plot!(margin=5mm,size=(600,280))
display(pall)
#savefig("D:\\Forschung\\Denmark Ocean Life\\Toxicity Project\\Figures\\Tox_Grazer\\ToxinGrazDistrib_H_T08")

# Q=range(0.1,5.1,step=0.1)
# r_GmaxHalf=zeros(length(Q))
# g0=zeros(length(Q))
#
# T = zeros(n)
# g = zeros(n)
#
# for k in 1:length(Q)
#     @. T = Q[k]/(D*2*pi)*besselk(0,(λ/D)^0.5*(r+0.1))
#     @. g=G*(1.0 -T/(HT+T))
#
#     Diff=abs.(g.-G./2)
#     r_GmaxHalf[k]=findfirst(x->x==minimum(Diff),Diff) #measure of public good
#     g0[k]=g[1]
# end
#
# @. r_GmaxHalf=r_GmaxHalf*r[end]/(n-1) # in cm
#
# p=plot(Q./HT,(1 .- g0),grid=false,lw=2,ylim=(0.985,1.0045),xlabel="Q/H_T",ylabel="Private good     (1-g(x=0))",legend=false)
# plot!(twinx(),Q./HT,r_GmaxHalf,grid=false,lw=2,lc=:darkred,ylabel="Public good     (distance where g=gmax/2)",legend=false)
# #display(p)
#
# savefig("D:\\Forschung\\Denmark Ocean Life\\Toxicity Project\\Figures\\Tox_Grazer\\PrivVsPublGood_Q_HT")
#




# fig = PyPlot.figure(figsize=(10,10))
# ax = fig[:add_subplot](1,1,1, projection = "3d")
# Surfi=ax[:plot_surface](xgrid,ygrid,z)
#
# savefig('D:\\Forschung\\Denmark Ocean Life\\Toxicity Project\\Figures\\AdvDiff\\MVNormal')

#PyPlot.show()

# fig = PyPlot.figure("pyplot_surfaceplot",figsize=(10,10))
# ax = fig[:add_subplot](2,1,1, projection = "3d")
# ax[:plot_surface](xgrid, ygrid, z, rstride=2,edgecolors="k",
#     cstride=2,
#     cmap=ColorMap(solar),
#     alpha=0.8,
#     linewidth=0.25)
