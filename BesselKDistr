#using PyPlot
using Plots
using ColorSchemes
using SpecialFunctions

solar = ColorSchemes.solar

n = 1001
x = range(-0.1, 0.1, length=n)
y = range(-0.1, 0.1, length=n)

xgrid = repeat(x',n,1)
ygrid = repeat(y,1,n)
z = zeros(n,n)

Dcm=0.864 #cm^2 d^-1
D=Dcm*10^-4 # d^-1 --> on relative spatial axis (simulated: 100cmx100cm --> relative: 1x1 dimensionless)
Q=1   # fmol d^-1 --> femtomol per day
λ=0.2  # d^-1

for i in 1:n
    for j in 1:n
        r=(x[i]^2+y[j]^2)^0.5
        z[i,j] = Q/(D*2*pi)*besselk(0,(λ/D)^0.5*(r+0.1))  # r+0.001 instead of only r --> because if r=0 --> z would go to infinity
        # z[i,j] = pdf(MvNormal([0.0; 0.0], [0.001^2 0.0; 0.0 0.001^2]),[x[i];y[j]]) # multivariate normal distribution MvNormal(eye(2))
    end
end

#surface( x, y, z, size=[800,480],camera=(50,50))
surface( x, y, z, size=[800,480],camera=(90,0)) # in 2D

# fig = PyPlot.figure(figsize=(10,10))
# ax = fig[:add_subplot](1,1,1, projection = "3d")
# Surfi=ax[:plot_surface](xgrid,ygrid,z)
#
# savefig('D:\\Forschung\\Denmark Ocean Life\\Toxicity Project\\Figures\\AdvDiff\\MVNormal')

#PyPlot.show()

# fig = PyPlot.figure("pyplot_surfaceplot",figsize=(10,10))
# ax = fig[:add_subplot](2,1,1, projection = "3d")
# ax[:plot_surface](xgrid, ygrid, z, rstride=2,edgecolors="k",
#     cstride=2,
#     cmap=ColorMap(solar),
#     alpha=0.8,
#     linewidth=0.25)
